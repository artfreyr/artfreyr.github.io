{"version":3,"sources":["webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/texts/hero.mdx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/texts/bottom.mdx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/item-tags.tsx"],"names":["List","children","sx","mb","ul","margin","padding","li","listStyle","a","variant","name","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","fontSize","fontWeight","color","parentName","isMDXComponent","Title","makeShortcode","text","Homepage","posts","useMinimalBlogConfig","basePath","blogPath","p","mt","to","replaceSlashes","showTags","HomepageComponent","allPost","data","nodes","query","BlogListItem","post","as","Link","slug","title","date","tags","Fragment","Listing","className","map","key","ItemTags","tagsPath","tag","i"],"mappings":"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","file":"component---themes-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-237f7acfa56d57b02100.js","sourcesContent":["/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx } from \"theme-ui\"\r\n\r\ntype ListProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst List = ({ children }: ListProps) => (\r\n  <section\r\n    sx={{\r\n      mb: [5, 5, 6],\r\n      ul: { margin: 0, padding: 0 },\r\n      li: { listStyle: `none`, mb: 3 },\r\n      a: { variant: `links.listItem` },\r\n    }}\r\n  >\r\n    {children}\r\n  </section>\r\n)\r\n\r\nexport default List\r\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Hi.\n    </Text>\n    <p>{`I'm Daniel - currently exploring the fields of software engineering and cyber security while helping businesses become more cyber secure at `}<a parentName=\"p\" {...{\n        \"href\": \"https://responsible-cyber.com\"\n      }}>{`Responsible Cyber`}</a>{`. `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Title text=\"Projects\" mdxType=\"Title\" />\n    <p><em parentName=\"p\">{`Nothing to show here yet`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"./layout\"\r\nimport Title from \"./title\"\r\nimport Listing from \"./listing\"\r\nimport List from \"./list\"\r\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n// @ts-ignore\r\nimport Hero from \"../texts/hero\"\r\n// @ts-ignore\r\nimport Bottom from \"../texts/bottom\"\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    excerpt: string\r\n    description: string\r\n    timeToRead?: number\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n}\r\n\r\nconst Homepage = ({ posts }: PostsProps) => {\r\n  const { basePath, blogPath } = useMinimalBlogConfig()\r\n\r\n  return (\r\n    <Layout>\r\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\r\n        <Hero />\r\n      </section>\r\n      <Title text=\"Latest Posts\">\r\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\r\n      </Title>\r\n      <Listing posts={posts} showTags={false} />\r\n      <List>\r\n        <Bottom />\r\n      </List>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import { graphql } from \"gatsby\"\r\nimport HomepageComponent from \"../components/homepage\"\r\n\r\nexport default HomepageComponent\r\n\r\nexport const query = graphql`\r\n  query($formatString: String!) {\r\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: $formatString)\r\n        excerpt\r\n        timeToRead\r\n        description\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Homepage from \"../../../components/homepage\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default function MinimalBlogCoreHomepage({ data }: Props) {\r\n  const { allPost } = data\r\n\r\n  return <Homepage posts={allPost.nodes} />\r\n}\r\n","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx, Link as TLink } from \"theme-ui\"\r\nimport { Box } from \"@theme-ui/components\"\r\nimport { Link } from \"gatsby\"\r\nimport ItemTags from \"./item-tags\"\r\n\r\ntype BlogListItemProps = {\r\n  post: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    excerpt: string\r\n    description: string\r\n    timeToRead?: number\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }\r\n  showTags?: boolean\r\n}\r\n\r\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\r\n  <Box mb={4}>\r\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\r\n      {post.title}\r\n    </TLink>\r\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\r\n      <time>{post.date}</time>\r\n      {post.tags && showTags && (\r\n        <React.Fragment>\r\n          {` â€” `}\r\n          <ItemTags tags={post.tags} />\r\n        </React.Fragment>\r\n      )}\r\n    </p>\r\n  </Box>\r\n)\r\n\r\nexport default BlogListItem\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport BlogListItem from \"./blog-list-item\"\r\n\r\ntype ListingProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    excerpt: string\r\n    description: string\r\n    timeToRead?: number\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  className?: string\r\n  showTags?: boolean\r\n}\r\n\r\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\r\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\r\n    {posts.map((post) => (\r\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\r\n    ))}\r\n  </section>\r\n)\r\n\r\nexport default Listing\r\n","import React from \"react\"\r\nimport { Link as TLink } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype TagsProps = {\r\n  tags: {\r\n    name: string\r\n    slug: string\r\n  }[]\r\n}\r\n\r\nconst ItemTags = ({ tags }: TagsProps) => {\r\n  const { tagsPath, basePath } = useMinimalBlogConfig()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tags.map((tag, i) => (\r\n        <React.Fragment key={tag.slug}>\r\n          {!!i && `, `}\r\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\r\n            {tag.name}\r\n          </TLink>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ItemTags\r\n"],"sourceRoot":""}