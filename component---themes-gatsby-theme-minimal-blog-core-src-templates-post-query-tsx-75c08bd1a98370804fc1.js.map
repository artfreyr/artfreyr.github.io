{"version":3,"sources":["webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/node_modules/gatsby-plugin-mdx/index.js","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/post.tsx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack:////mnt/c/Users/danie/Documents/Workstuff/Personal/gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/item-tags.tsx"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","shadow","map","v","Post","post","data","title","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","variant","sx","color","mt","a","fontSize","date","tags","Fragment","timeToRead","my","boxShadow","join","body","PostComponent","query","ItemTags","useMinimalBlogConfig","tagsPath","basePath","tag","i","as","Link","to","replaceSlashes","name"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,4OCAIS,EADK,CAAC,OAAD,oBACOC,KAAI,SAACC,GAAD,iCAAkCA,EAAlC,IAAuCA,EAAvC,UA4BPC,EA1BF,SAAC,GAAD,IAAWC,EAAX,EAAGC,KAAQD,KAAX,OACX,YAAC,IAAD,KACE,YAAC,IAAD,CACEE,MAAOF,EAAKE,MACZC,YAAaH,EAAKG,YAAcH,EAAKG,YAAcH,EAAKI,QACxDC,MAAOL,EAAKM,OAASN,EAAKM,OAAOC,gBAAgBC,OAAOC,SAAMC,EAC9DC,SAAUX,EAAKY,OAEjB,YAAC,IAAD,CAASC,QAAQ,aAAab,EAAKE,OACnC,iBAAGY,GAAI,CAAEC,MAAO,YAAaC,GAAI,EAAGC,EAAG,CAAEF,MAAO,aAAeG,SAAU,CAAC,EAAG,EAAG,KAC9E,wBAAOlB,EAAKmB,MACXnB,EAAKoB,MACJ,YAAC,IAAMC,SAAP,WAEE,YAAC,IAAD,CAAUD,KAAMpB,EAAKoB,QAGxBpB,EAAKsB,YAAL,MACAtB,EAAKsB,YAAc,wBAAOtB,EAAKsB,WAAZ,cAEtB,uBAASR,GAAI,CAAES,GAAI,EAAG,6BAA8B,CAAEA,GAAI,CAAC,EAAG,EAAG,GAAIC,UAAW5B,EAAO6B,KAAP,SAC9E,YAAC,cAAD,KAAczB,EAAK0B,S,urBCtDVC,UCOA,YAA8C,IAAf1B,EAAe,EAAfA,KACpCD,EAASC,EAATD,KAER,OAAO,kBAAC,EAAD,CAAMC,KAAI,KAAOA,EAAP,CAAaD,YDVjB2B,IAEFC,EAAQ,c,qHEyBNC,IAjBE,SAAC,GAAwB,IAAtBT,EAAsB,EAAtBA,KAAsB,EACTU,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMX,SAAP,KACGD,EAAKvB,KAAI,SAACoC,EAAKC,GAAN,OACR,kBAAC,IAAMb,SAAP,CAAgB3B,IAAKuC,EAAIrB,QACpBsB,GAAF,KACD,kBAAC,IAAD,CAAOC,GAAIC,OAAMC,GAAIC,YAAe,IAAIN,EAAL,IAAiBD,EAAjB,IAA6BE,EAAIrB,OACjEqB,EAAIM","file":"component---themes-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-75c08bd1a98370804fc1.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","/** @jsx jsx */\r\nimport { jsx, Heading } from \"theme-ui\"\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\nimport React from \"react\"\r\nimport Layout from \"./layout\"\r\nimport ItemTags from \"./item-tags\"\r\nimport SEO from \"./seo\"\r\n\r\ntype PostProps = {\r\n  data: {\r\n    post: {\r\n      slug: string\r\n      title: string\r\n      date: string\r\n      tags?: {\r\n        name: string\r\n        slug: string\r\n      }[]\r\n      description?: string\r\n      body: string\r\n      excerpt: string\r\n      timeToRead?: number\r\n      banner?: {\r\n        childImageSharp: {\r\n          resize: {\r\n            src: string\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst px = [`32px`, `16px`, `8px`, `4px`]\r\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.15) 0px ${v} ${v} 0px`)\r\n\r\nconst Post = ({ data: { post } }: PostProps) => (\r\n  <Layout>\r\n    <SEO\r\n      title={post.title}\r\n      description={post.description ? post.description : post.excerpt}\r\n      image={post.banner ? post.banner.childImageSharp.resize.src : undefined}\r\n      pathname={post.slug}\r\n    />\r\n    <Heading variant=\"styles.h2\">{post.title}</Heading>\r\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\r\n      <time>{post.date}</time>\r\n      {post.tags && (\r\n        <React.Fragment>\r\n          {` — `}\r\n          <ItemTags tags={post.tags} />\r\n        </React.Fragment>\r\n      )}\r\n      {post.timeToRead && ` — `}\r\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\r\n    </p>\r\n    <section sx={{ my: 5, \".gatsby-resp-image-wrapper\": { my: [4, 4, 5], boxShadow: shadow.join(`, `) } }}>\r\n      <MDXRenderer>{post.body}</MDXRenderer>\r\n    </section>\r\n  </Layout>\r\n)\r\n\r\nexport default Post\r\n","import { graphql } from \"gatsby\"\r\nimport PostComponent from \"../components/post\"\r\n\r\nexport default PostComponent\r\n\r\nexport const query = graphql`\r\n  query($slug: String!, $formatString: String!) {\r\n    post(slug: { eq: $slug }) {\r\n      slug\r\n      title\r\n      date(formatString: $formatString)\r\n      tags {\r\n        name\r\n        slug\r\n      }\r\n      description\r\n      body\r\n      excerpt\r\n      timeToRead\r\n      banner {\r\n        childImageSharp {\r\n          resize(width: 1200, quality: 90) {\r\n            src\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Post from \"../../../components/post\"\r\n\r\ntype Props = {\r\n  data: {\r\n    post: any\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\nexport default function MinimalBlogCorePost({ data }: Props) {\r\n  const { post } = data\r\n\r\n  return <Post data={{ ...data, post }} />\r\n}\r\n","import React from \"react\"\r\nimport { Link as TLink } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype TagsProps = {\r\n  tags: {\r\n    name: string\r\n    slug: string\r\n  }[]\r\n}\r\n\r\nconst ItemTags = ({ tags }: TagsProps) => {\r\n  const { tagsPath, basePath } = useMinimalBlogConfig()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tags.map((tag, i) => (\r\n        <React.Fragment key={tag.slug}>\r\n          {!!i && `, `}\r\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\r\n            {tag.name}\r\n          </TLink>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ItemTags\r\n"],"sourceRoot":""}